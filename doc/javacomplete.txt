*javacomplete.txt*	Updated version of the original javacomplete plugin
artur shaik                                                     *javacomplete*

==============================================================================
CONTENTS                                               *javacomplete-contents*
  1. Introduction.........................................|javacomplete-intro|
  2. Features..........................................|javacomplete-features|
  3. Requirements..................................|javacomplete-requirements|
  4. Download..........................................|javacomplete-download|
  5. Install............................................|javacomplete-install|
  6. Usage................................................|javacomplete-usage|

==============================================================================
INTRODUCTION                                              *javacomplete-intro*

This is javacomplete, an omni-completion script of JAVA language for vim 7 and
above. It includes javacomplete.vim, java_parser.vim, javavi library,
javaparser library and javacomplete.txt.

==============================================================================
FEATURES                                               *javacomplete-features*

  1. List members of a class, including (static) fields, (static) methods and
    ctors;
  2. List classes or subpackages of a package;
  3. Provide parameters information of a method, list all overload methods;
  4. Complete an incomplete word;
  5. Provide a complete JAVA parser written in Vim script language;
  6. Use the JVM to obtain most information;
  7. Use the embedded parser to obtain the class information from source
    files;
  8. JSP is supported, Builtin objects such as request, session can be
    recognized;
  9. The classes and jar files in the WEB-INF will be appended automatically
    to the classpath;
  10. Server side java reflection class loader and parsing library;
  11. Search class files automatically;
  12. Complete class name;
  13. Add import statement for a given class name;
  14. Complete methods declaration after '@Override';
  15. Support for maven, gradle and Eclipse's '.classpath';
  16. Cross-session cache;
  17. Auto insert methods that need to be implemented;
  18. `toString`, `equals`, `hashCode`, Accessors generation.

==============================================================================
REQUIREMENTS                                       *javacomplete-requirements*


  1. Vim version 7.4 and above with python support;
  2. JDK8.


==============================================================================
DOWNLOAD                                               *javacomplete-download*

You can download the lastest version from this url:
https://github.com/artur-shaik/vim-javacomplete2

==============================================================================
INSTALL                                                 *javacomplete-install*

  1. This assumes you are using `Vundle`. Adapt for your plugin manager of
    choice. Put this into your `.vimrc`.

    " Java completion plugin.     Plugin 'artur-shaik/vim-javacomplete2'

  2. Set 'omnifunc' option. e.g.

>
  autocmd Filetype java setlocal omnifunc=javacomplete#Complete
<
  3. Map keys you prefer:
For smart (trying to guess import option) insert class import with <F4>:
>
    nmap <F4> <Plug>(JavaComplete-Imports-AddSmart)
    imap <F4> <Plug>(JavaComplete-Imports-AddSmart)
<
For usual (will ask for import option) insert class import with <F5>:

    nmap <F5> <Plug>(JavaComplete-Imports-Add)     imap <F5>
<Plug>(JavaComplete-Imports-Add)

For add all missing imports with <F6>:

    nmap <F6> <Plug>(JavaComplete-Imports-AddMissing)     imap <F6>
<Plug>(JavaComplete-Imports-AddMissing)

For remove all missing imports with <F7>:

    nmap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)     imap <F7>
<Plug>(JavaComplete-Imports-RemoveUnused)

For sorting all imports with <F8>:

    nmap <F8> <Plug>(JavaComplete-Imports-SortImports)     imap <F8>
<Plug>(JavaComplete-Imports-SortImports)


Default mappings:

    nmap <leader>jI <Plug>(JavaComplete-Imports-AddMissing)     nmap
<leader>jR <Plug>(JavaComplete-Imports-RemoveUnused)     nmap <leader>ji
<Plug>(JavaComplete-Imports-AddSmart)     nmap <leader>jii
<Plug>(JavaComplete-Imports-Add)     nmap <Leader>jis
<Plug>(JavaComplete-Imports-SortImports)

    imap <C-j>I <Plug>(JavaComplete-Imports-AddMissing)     imap <C-j>R
<Plug>(JavaComplete-Imports-RemoveUnused)     imap <C-j>i
<Plug>(JavaComplete-Imports-AddSmart)     imap <C-j>ii
<Plug>(JavaComplete-Imports-Add)

    nmap <leader>jM <Plug>(JavaComplete-Generate-AbstractMethods)

    imap <C-j>jM <Plug>(JavaComplete-Generate-AbstractMethods)

    nmap <leader>jA <Plug>(JavaComplete-Generate-Accessors)     nmap
<leader>js <Plug>(JavaComplete-Generate-AccessorSetter)     nmap <leader>jg
<Plug>(JavaComplete-Generate-AccessorGetter)     nmap <leader>ja
<Plug>(JavaComplete-Generate-AccessorSetterGetter)     nmap <leader>jts
<Plug>(JavaComplete-Generate-ToString)     nmap <leader>jeq
<Plug>(JavaComplete-Generate-EqualsAndHashCode)     nmap <leader>jc
<Plug>(JavaComplete-Generate-Constructor)     nmap <leader>jcc
<Plug>(JavaComplete-Generate-DefaultConstructor)

    imap <C-j>s <Plug>(JavaComplete-Generate-AccessorSetter)     imap <C-j>g
<Plug>(JavaComplete-Generate-AccessorGetter)     imap <C-j>a
<Plug>(JavaComplete-Generate-AccessorSetterGetter)

    vmap <leader>js <Plug>(JavaComplete-Generate-AccessorSetter)     vmap
<leader>jg <Plug>(JavaComplete-Generate-AccessorGetter)     vmap <leader>ja
<Plug>(JavaComplete-Generate-AccessorSetterGetter)


  4. Javavi library will be automatcally compiled when you
use first time.  If no libs/javavi/target is generated, check that you have
the write permission and jdk installed.

==============================================================================
USAGE                                                     *javacomplete-usage*

You can use it like other omni-completion script. Many samples of input
context are gived in the following section.

See FAQ in time if some problem occurs. When meeting other problems not
described in FAQ, you can contact with the auther by the following e-mail:
ashaihullin@gmail.com



vim:tw=78:ts=8:ft=help:norl:
